@model TiendaAlquiler.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}
@{
    var errorMessage = TempData["ErrorMessage"] as string;
}
<div class="col-md-4 mx-auto ">
    <form asp-controller="Usuario" asp-action="Login" method="post" style="margin-top:100px">
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-group">
                    <label asp-for="UsuarioNombre"></label>
                    <input asp-for="UsuarioNombre" class="form-control" />
                    <span asp-validation-for="UsuarioNombre" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" type="password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="text-center" style="margin-top: 10px">
                    <button type="submit" class="btn btn-highlight w-100">Login</button>
                </div>
            </div>
        </div>
    </form>
</div>
<div id="modalAdvertencia">
    <div class="modalDentro">
        <h5>Advertencia</h5>
        <p id="modalMensaje">@TempData["ErrorMessage"]</p>
        <button onclick="closeModal()">Cerrar </button>
    </div>
</div>
<script>
     // Mostrar el modal solo si hay un mensaje de error
    let mensaje = '@TempData["ErrorMessage"]';
    if (mensaje) {
        document.getElementById('modalAdvertencia').style.display = 'block'; // Mostrar modal
    }

    // Función para cerrar el modal
    function closeModal() {
        document.getElementById('modalAdvertencia').style.display = 'none'; // Ocultar modal
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}