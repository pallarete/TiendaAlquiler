// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable

using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using TiendaAlquiler.Models;



namespace TiendaAlquiler.Data;

public class TiendaAlquilerDBContext : IdentityDbContext<Usuario>
{
    public TiendaAlquilerDBContext(DbContextOptions<TiendaAlquilerDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Alquiler> Alquilers { get; set; }

    public virtual DbSet<Carroceria> Carroceria { get; set; }

    public virtual DbSet<Coche> Coches { get; set; }

    public virtual DbSet<Color> Colors { get; set; }

    public virtual DbSet<Decada> Decada { get; set; }

    public virtual DbSet<Foto> Fotos { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<PaisFabricacion> PaisFabricacions { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Alquiler>(entity =>
        {
            base.OnModelCreating(modelBuilder);
            entity.HasKey(e => e.AlquilerId).HasName("PK__Alquiler__F28020B524CE1122");

            entity.ToTable("Alquiler");

            entity.Property(e => e.PrecioFinal).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Coche).WithMany(p => p.Alquilers)
                .HasForeignKey(d => d.CocheId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Alquiler_Coche");

            entity.HasOne(d => d.Usuario).WithMany(p => p.Alquilers)
                .HasForeignKey(d => d.UsuarioId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Alquiler_Usuario");
        });

        modelBuilder.Entity<Carroceria>(entity =>
        {
            entity.HasKey(e => e.CarroceriaId).HasName("PK__Carrocer__EBEFDD7F34F2C214");

            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Coche>(entity =>
        {
            entity.HasKey(e => e.CocheId).HasName("PK__Coche__9E980F6B023783F5");

            entity.ToTable("Coche");

            entity.Property(e => e.Marca)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Modelo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PrecioAlquiler).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Carroceria).WithMany(p => p.Coches)
                .HasForeignKey(d => d.CarroceriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coche_Carroceria");

            entity.HasOne(d => d.Color).WithMany(p => p.Coches)
                .HasForeignKey(d => d.ColorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coche_Color");

            entity.HasOne(d => d.Decada).WithMany(p => p.Coches)
                .HasForeignKey(d => d.DecadaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coche_Decada");

            entity.HasOne(d => d.PaisFabricacion).WithMany(p => p.Coches)
                .HasForeignKey(d => d.PaisFabricacionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coche_PaisFabricacion");
        });

        modelBuilder.Entity<Color>(entity =>
        {
            entity.HasKey(e => e.ColorId).HasName("PK__Color__8DA7674D8D39398E");

            entity.ToTable("Color");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Decada>(entity =>
        {
            entity.HasKey(e => e.DecadaId).HasName("PK__Decada__B60F61813E1A9096");
        });

        modelBuilder.Entity<Foto>(entity =>
        {
            entity.HasKey(e => e.FotoId).HasName("PK__Foto__4EA1C119D86B5C92");

            entity.ToTable("Foto");

            entity.Property(e => e.RutaAcceso)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.Coche).WithMany(p => p.Fotos)
                .HasForeignKey(d => d.CocheId)
                .HasConstraintName("FK_Foto_Coche");
        });

        modelBuilder.Entity<PaisFabricacion>(entity =>
        {
            entity.HasKey(e => e.PaisFabricacionId).HasName("PK__PaisFabr__E30419353E3D377E");

            entity.ToTable("PaisFabricacion");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

    }

}